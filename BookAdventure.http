### BookAdventure API Testing
### Base URL
@baseUrl = https://localhost:7260
@contentType = application/json

### Variables for authentication
@loginEmail = admin@bookadventure.com
@loginPassword = AdminPass123!

###################################
### 1. AUTHENTICATION
###################################

### Login Admin User
POST {{baseUrl}}/api/users/login
Content-Type: {{contentType}}

{
    "email": "{{loginEmail}}",
    "password": "{{loginPassword}}"
}

### Save token from login response
@authToken = {{login.response.body.data.token}}

###################################
### 2. GENRES ENDPOINTS
###################################

### Get all genres
GET {{baseUrl}}/api/genres
Authorization: Bearer {{authToken}}

### Get genre by ID
GET {{baseUrl}}/api/genres/1
Authorization: Bearer {{authToken}}

### Create new genre
POST {{baseUrl}}/api/genres
Authorization: Bearer {{authToken}}
Content-Type: {{contentType}}

{
    "name": "Biografía",
    "description": "Libros biográficos y autobiográficos"
}

### Update genre (all fields)
PUT {{baseUrl}}/api/genres/1
Authorization: Bearer {{authToken}}
Content-Type: {{contentType}}

{
    "name": "Ficción Actualizada",
    "status": true
}

### Update genre (partial - only name)
PUT {{baseUrl}}/api/genres/1
Authorization: Bearer {{authToken}}
Content-Type: {{contentType}}

{
    "name": "Ficción Moderna"
}

###################################
### 3. BOOKS ENDPOINTS
###################################

### Get all books with pagination
GET {{baseUrl}}/api/books?page=1&pageSize=10
Authorization: Bearer {{authToken}}

### Get book by ID
GET {{baseUrl}}/api/books/1
Authorization: Bearer {{authToken}}

### Create new book with image file
POST {{baseUrl}}/api/books
Authorization: Bearer {{authToken}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="title"

El Señor de los Anillos
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="author"

J.R.R. Tolkien
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="isbn"

978-0547928227
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="description"

Epic fantasy adventure
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="stock"

15
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="genreId"

1
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="isAvailable"

true
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="imageFile"; filename="book-cover.jpg"
Content-Type: image/jpeg

< ./path/to/your/image.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### Create new book (JSON format without file)
POST {{baseUrl}}/api/books
Authorization: Bearer {{authToken}}
Content-Type: {{contentType}}

{
    "title": "El Señor de los Anillos",
    "author": "J.R.R. Tolkien",
    "isbn": "978-0547928227",
    "description": "Epic fantasy adventure",
    "stock": 15,
    "genreId": 1,
    "imageUrl": "https://example.com/lotr.jpg",
    "isAvailable": true
}

### Update book (all fields)
PUT {{baseUrl}}/api/books/1
Authorization: Bearer {{authToken}}
Content-Type: {{contentType}}

{
    "title": "Cien Años de Soledad - Edición Especial",
    "author": "Gabriel García Márquez",
    "isbn": "978-0060883287",
    "description": "Una obra maestra de la literatura latinoamericana",
    "stock": 10,
    "genreId": 1,
    "imageUrl": "https://example.com/cien-anos.jpg",
    "isAvailable": true
}

### Update book (partial - only title)
PUT {{baseUrl}}/api/books/1
Authorization: Bearer {{authToken}}
Content-Type: {{contentType}}

{
    "title": "Cien Años de Soledad - Nueva Edición"
}

### Update book (partial - title and stock)
PUT {{baseUrl}}/api/books/1
Authorization: Bearer {{authToken}}
Content-Type: {{contentType}}

{
    "title": "Cien Años de Soledad - Edición Limitada",
    "stock": 5
}

### Search available books
GET {{baseUrl}}/api/books?isAvailable=true&page=1&pageSize=5
Authorization: Bearer {{authToken}}

###################################
### 4. CUSTOMERS ENDPOINTS
###################################

### Get all customers
GET {{baseUrl}}/api/customers?page=1&pageSize=10
Authorization: Bearer {{authToken}}

### Get customer by ID
GET {{baseUrl}}/api/customers/1
Authorization: Bearer {{authToken}}

### Create new customer
POST {{baseUrl}}/api/customers
Authorization: Bearer {{authToken}}
Content-Type: {{contentType}}

{
    "firstName": "Juan",
    "lastName": "Pérez",
    "email": "juan.perez@email.com",
    "phone": "+1234567890",
    "address": "Calle Principal 123"
}

### Update customer (all fields)
PUT {{baseUrl}}/api/customers/1
Authorization: Bearer {{authToken}}
Content-Type: {{contentType}}

{
    "firstName": "Juan Carlos",
    "lastName": "Pérez González",
    "email": "juan.perez@email.com",
    "dni": "12345678",
    "age": 35,
    "phoneNumber": "+1234567890"
}

### Update customer (partial - only email)
PUT {{baseUrl}}/api/customers/1
Authorization: Bearer {{authToken}}
Content-Type: {{contentType}}

{
    "email": "juan.carlos.perez@email.com"
}

### Update customer (partial - name and phone)
PUT {{baseUrl}}/api/customers/1
Authorization: Bearer {{authToken}}
Content-Type: {{contentType}}

{
    "firstName": "Juan Carlos",
    "phoneNumber": "+1987654321"
}

###################################
### 5. RENTAL ORDERS ENDPOINTS
###################################

### Get all rental orders
GET {{baseUrl}}/api/rental-orders?page=1&pageSize=10
Authorization: Bearer {{authToken}}

### Get rental order by ID
GET {{baseUrl}}/api/rental-orders/1
Authorization: Bearer {{authToken}}

### Create new rental order
POST {{baseUrl}}/api/rental-orders
Authorization: Bearer {{authToken}}
Content-Type: {{contentType}}

{
    "customerId": 1,
    "rentalDate": "2025-01-25T10:00:00Z",
    "details": [
        {
            "bookId": 1,
            "quantity": 1,
            "unitPrice": 5.99,
            "dueDate": "2025-02-08T10:00:00Z"
        },
        {
            "bookId": 2,
            "quantity": 1,
            "unitPrice": 4.99,
            "dueDate": "2025-02-08T10:00:00Z"
        }
    ]
}

### Update rental order (all fields)
PUT {{baseUrl}}/api/rental-orders/1
Authorization: Bearer {{authToken}}
Content-Type: {{contentType}}

{
    "customerId": 1,
    "dueDate": "2025-02-15T10:00:00Z",
    "notes": "Extensión de fecha de entrega solicitada por el cliente"
}

### Update rental order (partial - only due date)
PUT {{baseUrl}}/api/rental-orders/1
Authorization: Bearer {{authToken}}
Content-Type: {{contentType}}

{
    "dueDate": "2025-02-20T10:00:00Z"
}

### Update rental order (partial - only notes)
PUT {{baseUrl}}/api/rental-orders/1
Authorization: Bearer {{authToken}}
Content-Type: {{contentType}}

{
    "notes": "Cliente contactado - fecha confirmada"
}

### Get overdue rentals
GET {{baseUrl}}/api/rental-orders?isOverdue=true
Authorization: Bearer {{authToken}}

### Get active rentals
GET {{baseUrl}}/api/rental-orders?isActive=true
Authorization: Bearer {{authToken}}

###################################
### 6. USER REGISTRATION
###################################

### Register new user
POST {{baseUrl}}/api/users/register
Content-Type: {{contentType}}

{
    "firstName": "María",
    "lastName": "González",
    "email": "maria.gonzalez@email.com",
    "password": "Password123!",
    "confirmPassword": "Password123!",
    "documentNumber": "12345678",
    "age": 28
}

### Login with new user
POST {{baseUrl}}/api/users/login
Content-Type: {{contentType}}

{
    "email": "maria.gonzalez@email.com",
    "password": "Password123!"
}

###################################
### 7. PASSWORD RESET FLOW
###################################

### Request password reset
POST {{baseUrl}}/api/users/reset-password
Content-Type: {{contentType}}

{
    "email": "maria.gonzalez@email.com"
}

### Set new password (requires reset token)
POST {{baseUrl}}/api/users/new-password
Content-Type: {{contentType}}

{
    "email": "maria.gonzalez@email.com",
    "token": "reset-token-here",
    "newPassword": "NewPassword123!"
}

###################################
### 8. ERROR TESTING
###################################

### Test unauthorized access
GET {{baseUrl}}/api/books

### Test not found
GET {{baseUrl}}/api/books/99999
Authorization: Bearer {{authToken}}

### Test invalid data
POST {{baseUrl}}/api/books
Authorization: Bearer {{authToken}}
Content-Type: {{contentType}}

{
    "title": "",
    "author": "",
    "isbn": "invalid-isbn"
}

###################################
### 10. BULK OPERATIONS (Updated)
###################################

### Get books by genre
GET {{baseUrl}}/api/books?genreId=1&page=1&pageSize=20
Authorization: Bearer {{authToken}}

### Get customer rental history
GET {{baseUrl}}/api/rental-orders?customerId=1&page=1&pageSize=10
Authorization: Bearer {{authToken}}

### Get rentals by date range
GET {{baseUrl}}/api/rental-orders?startDate=2025-01-01&endDate=2025-12-31
Authorization: Bearer {{authToken}}
